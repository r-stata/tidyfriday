CodeMirror.defineMode("sparql",function(t){var o,i=t.indentUnit;function e(t){return new RegExp("^(?:"+t.join("|")+")$","i")}var r=e(["str","lang","langmatches","datatype","bound","sameterm","isiri","isuri","isblank","isliteral","union","a"]),a=e(["base","prefix","select","distinct","reduced","construct","describe","ask","from","named","where","order","limit","offset","filter","optional","graph","by","asc","desc"]),c=/[*+\-<>=&|]/;function l(t,e){var i,n=t.next();return o=null,"$"==n||"?"==n?(t.match(/^[\w\d]*/),"variable-2"):"<"!=n||t.match(/^[\s\u00a0=]/,!1)?'"'==n||"'"==n?(e.tokenize=(i=n,function(t,e){for(var n,o=!1;null!=(n=t.next());){if(n==i&&!o){e.tokenize=l;break}o=!o&&"\\"==n}return"string"}),e.tokenize(t,e)):/[{}\(\),\.;\[\]]/.test(n)?(o=n,null):"#"==n?(t.skipToEnd(),"comment"):c.test(n)?(t.eatWhile(c),null):":"==n?(t.eatWhile(/[\w\d\._\-]/),"atom"):(t.eatWhile(/[_\w\d]/),t.eat(":")?(t.eatWhile(/[\w\d_\-]/),"atom"):(e=t.current(),r.test(e)?null:a.test(e)?"keyword":"variable")):(t.match(/^[^\s\u00a0>]*>?/),"atom")}function u(t,e,n){t.context={prev:t.context,indent:t.indent,col:n,type:e}}function s(t){t.indent=t.context.indent,t.context=t.context.prev}return{startState:function(){return{tokenize:l,context:null,indent:0,col:0}},token:function(t,e){if(t.sol()&&(e.context&&null==e.context.align&&(e.context.align=!1),e.indent=t.indentation()),t.eatSpace())return null;var n=e.tokenize(t,e);if("comment"!=n&&e.context&&null==e.context.align&&"pattern"!=e.context.type&&(e.context.align=!0),"("==o)u(e,")",t.column());else if("["==o)u(e,"]",t.column());else if("{"==o)u(e,"}",t.column());else if(/[\]\}\)]/.test(o)){for(;e.context&&"pattern"==e.context.type;)s(e);e.context&&o==e.context.type&&s(e)}else"."==o&&e.context&&"pattern"==e.context.type?s(e):/atom|string|variable/.test(n)&&e.context&&(/[\}\]]/.test(e.context.type)?u(e,"pattern",t.column()):"pattern"!=e.context.type||e.context.align||(e.context.align=!0,e.context.col=t.column()));return n},indent:function(t,e){var e=e&&e.charAt(0),n=t.context;if(/[\]\}]/.test(e))for(;n&&"pattern"==n.type;)n=n.prev;t=n&&e==n.type;return n?"pattern"==n.type?n.col:n.align?n.col+(t?0:1):n.indent+(t?0:i):0}}}),CodeMirror.defineMIME("application/x-sparql-query","sparql");