{"version":3,"sources":["../node_modules/_codemirror@5.65.12@codemirror/mode/asterisk/asterisk.js"],"names":["CodeMirror","defineMode","atoms","dpcmd","apps","startState","blockComment","extenStart","extenSame","extenInclude","extenExten","extenPriority","extenApplication","token","stream","state","cur","eatSpace","eatWhile","current","test","skipToEnd","next","toLowerCase","indexOf","ch","match","skipTo","eat","ch1","peek","basicToken","blockCommentStart","blockCommentEnd","lineComment","defineMIME","mod","__webpack_require__"],"mappings":"+EA2BC,SAAAA,GACD,aAEAA,EAAAC,WAAA,sBACA,IAAAC,EAAA,gDACAC,EAAA,qBACAC,EAAA,ggFAkFA,OACAC,WAAA,WACA,OACAC,cAAA,EACAC,YAAA,EACAC,WAAA,EACAC,cAAA,EACAC,YAAA,EACAC,eAAA,EACAC,kBAAA,IAGAC,MAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,GACA,OAAAF,EAAAG,WAAA,KAEAF,EAAAR,YACAO,EAAAI,SAAA,SACAF,EAAAF,EAAAK,UACA,QAAAC,KAAAJ,IACAD,EAAAL,YAAA,EACAK,EAAAR,YAAA,EACA,WAEAQ,EAAAR,YAAA,EACAO,EAAAO,YACA,UAESN,EAAAL,YAETK,EAAAL,YAAA,EACAK,EAAAJ,eAAA,EACAG,EAAAI,SAAA,QACAH,EAAAN,eACAK,EAAAO,YACAN,EAAAJ,eAAA,EACAI,EAAAN,cAAA,GAEAM,EAAAP,YACAO,EAAAJ,eAAA,EACAI,EAAAP,WAAA,EACAO,EAAAH,kBAAA,GAEA,OACSG,EAAAJ,eACTI,EAAAJ,eAAA,EACAI,EAAAH,kBAAA,EACAE,EAAAQ,OACAP,EAAAP,UAAA,MACAM,EAAAI,SAAA,QACA,WACSH,EAAAH,kBACTE,EAAAI,SAAA,KAEA,OADAF,EAAAF,EAAAK,WACA,MACAL,EAAAI,SAAA,MACAF,EAAAF,EAAAK,UAAAI,cACAR,EAAAH,kBAAA,GACA,IAAAR,EAAAoB,QAAAR,GACA,aAKA,OAjJA,SAAAF,EAAAC,GACA,IAAAC,EAAA,GACAS,EAAAX,EAAAQ,OAEA,GAAAP,EAAAT,aAWA,MAVA,KAAAmB,GAAAX,EAAAY,MAAA,MAAyC,GACzCX,EAAAT,cAAA,EACSQ,EAAAa,OAAA,QACTb,EAAAQ,OACAR,EAAAQ,OACAR,EAAAQ,OACAP,EAAAT,cAAA,GAEAQ,EAAAO,YAEA,UAEA,QAAAI,EACA,OAAAX,EAAAY,MAAA,WACAZ,EAAAY,MAAA,SAEAX,EAAAT,cAAA,EACA,YAGAQ,EAAAO,YACA,WAGA,QAAAI,EAGA,OAFAX,EAAAa,OAAA,KACAb,EAAAc,IAAA,KACA,SAGA,QAAAH,EAEA,OADAX,EAAAa,OAAA,KACA,SAEA,QAAAF,EAEA,OADAX,EAAAa,OAAA,KACA,WAGA,QAAAF,IACAX,EAAAI,SAAA,MACAF,EAAAF,EAAAK,WACA,IAAAhB,EAAAqB,QAAAR,IAEA,OADAF,EAAAO,YACA,SAIA,QAAAI,EAAA,CACA,IAAAI,EAAAf,EAAAgB,OACA,QAAAD,EAGA,OAFAf,EAAAa,OAAA,KACAb,EAAAc,IAAA,KACA,aAMA,GAFAd,EAAAI,SAAA,MACAF,EAAAF,EAAAK,WACA,IAAAjB,EAAAsB,QAAAR,GAAA,CAEA,OADAD,EAAAR,YAAA,EACAS,GACA,WACAD,EAAAP,WAAA,EACA,MACA,cACA,aACA,gBACAO,EAAAN,cAAA,EAKA,cAiEAsB,CAAAjB,EAAAC,IAIAiB,kBAAA,MACAC,gBAAA,MACAC,YAAA,OAGAlC,EAAAmC,WAAA,8BApKAC,CAAQC,EAAQ","file":"static/js/32.2676da44.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n/*\n * =====================================================================================\n *\n *       Filename:  mode/asterisk/asterisk.js\n *\n *    Description:  CodeMirror mode for Asterisk dialplan\n *\n *        Created:  05/17/2012 09:20:25 PM\n *       Revision:  08/05/2019 AstLinux Project: Support block-comments\n *\n *         Author:  Stas Kobzar (stas@modulis.ca),\n *        Company:  Modulis.ca Inc.\n *\n * =====================================================================================\n */\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"asterisk\", function () {\n    var atoms = [\"exten\", \"same\", \"include\", \"ignorepat\", \"switch\"],\n      dpcmd = [\"#include\", \"#exec\"],\n      apps = [\"addqueuemember\", \"adsiprog\", \"aelsub\", \"agentlogin\", \"agentmonitoroutgoing\", \"agi\", \"alarmreceiver\", \"amd\", \"answer\", \"authenticate\", \"background\", \"backgrounddetect\", \"bridge\", \"busy\", \"callcompletioncancel\", \"callcompletionrequest\", \"celgenuserevent\", \"changemonitor\", \"chanisavail\", \"channelredirect\", \"chanspy\", \"clearhash\", \"confbridge\", \"congestion\", \"continuewhile\", \"controlplayback\", \"dahdiacceptr2call\", \"dahdibarge\", \"dahdiras\", \"dahdiscan\", \"dahdisendcallreroutingfacility\", \"dahdisendkeypadfacility\", \"datetime\", \"dbdel\", \"dbdeltree\", \"deadagi\", \"dial\", \"dictate\", \"directory\", \"disa\", \"dumpchan\", \"eagi\", \"echo\", \"endwhile\", \"exec\", \"execif\", \"execiftime\", \"exitwhile\", \"extenspy\", \"externalivr\", \"festival\", \"flash\", \"followme\", \"forkcdr\", \"getcpeid\", \"gosub\", \"gosubif\", \"goto\", \"gotoif\", \"gotoiftime\", \"hangup\", \"iax2provision\", \"ices\", \"importvar\", \"incomplete\", \"ivrdemo\", \"jabberjoin\", \"jabberleave\", \"jabbersend\", \"jabbersendgroup\", \"jabberstatus\", \"jack\", \"log\", \"macro\", \"macroexclusive\", \"macroexit\", \"macroif\", \"mailboxexists\", \"meetme\", \"meetmeadmin\", \"meetmechanneladmin\", \"meetmecount\", \"milliwatt\", \"minivmaccmess\", \"minivmdelete\", \"minivmgreet\", \"minivmmwi\", \"minivmnotify\", \"minivmrecord\", \"mixmonitor\", \"monitor\", \"morsecode\", \"mp3player\", \"mset\", \"musiconhold\", \"nbscat\", \"nocdr\", \"noop\", \"odbc\", \"odbc\", \"odbcfinish\", \"originate\", \"ospauth\", \"ospfinish\", \"osplookup\", \"ospnext\", \"page\", \"park\", \"parkandannounce\", \"parkedcall\", \"pausemonitor\", \"pausequeuemember\", \"pickup\", \"pickupchan\", \"playback\", \"playtones\", \"privacymanager\", \"proceeding\", \"progress\", \"queue\", \"queuelog\", \"raiseexception\", \"read\", \"readexten\", \"readfile\", \"receivefax\", \"receivefax\", \"receivefax\", \"record\", \"removequeuemember\", \"resetcdr\", \"retrydial\", \"return\", \"ringing\", \"sayalpha\", \"saycountedadj\", \"saycountednoun\", \"saycountpl\", \"saydigits\", \"saynumber\", \"sayphonetic\", \"sayunixtime\", \"senddtmf\", \"sendfax\", \"sendfax\", \"sendfax\", \"sendimage\", \"sendtext\", \"sendurl\", \"set\", \"setamaflags\", \"setcallerpres\", \"setmusiconhold\", \"sipaddheader\", \"sipdtmfmode\", \"sipremoveheader\", \"skel\", \"slastation\", \"slatrunk\", \"sms\", \"softhangup\", \"speechactivategrammar\", \"speechbackground\", \"speechcreate\", \"speechdeactivategrammar\", \"speechdestroy\", \"speechloadgrammar\", \"speechprocessingsound\", \"speechstart\", \"speechunloadgrammar\", \"stackpop\", \"startmusiconhold\", \"stopmixmonitor\", \"stopmonitor\", \"stopmusiconhold\", \"stopplaytones\", \"system\", \"testclient\", \"testserver\", \"transfer\", \"tryexec\", \"trysystem\", \"unpausemonitor\", \"unpausequeuemember\", \"userevent\", \"verbose\", \"vmauthenticate\", \"vmsayname\", \"voicemail\", \"voicemailmain\", \"wait\", \"waitexten\", \"waitfornoise\", \"waitforring\", \"waitforsilence\", \"waitmusiconhold\", \"waituntil\", \"while\", \"zapateller\"];\n    function basicToken(stream, state) {\n      var cur = '';\n      var ch = stream.next();\n      // comment\n      if (state.blockComment) {\n        if (ch == \"-\" && stream.match(\"-;\", true)) {\n          state.blockComment = false;\n        } else if (stream.skipTo(\"--;\")) {\n          stream.next();\n          stream.next();\n          stream.next();\n          state.blockComment = false;\n        } else {\n          stream.skipToEnd();\n        }\n        return \"comment\";\n      }\n      if (ch == \";\") {\n        if (stream.match(\"--\", true)) {\n          if (!stream.match(\"-\", false)) {\n            // Except ;--- is not a block comment\n            state.blockComment = true;\n            return \"comment\";\n          }\n        }\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      // context\n      if (ch == '[') {\n        stream.skipTo(']');\n        stream.eat(']');\n        return \"header\";\n      }\n      // string\n      if (ch == '\"') {\n        stream.skipTo('\"');\n        return \"string\";\n      }\n      if (ch == \"'\") {\n        stream.skipTo(\"'\");\n        return \"string-2\";\n      }\n      // dialplan commands\n      if (ch == '#') {\n        stream.eatWhile(/\\w/);\n        cur = stream.current();\n        if (dpcmd.indexOf(cur) !== -1) {\n          stream.skipToEnd();\n          return \"strong\";\n        }\n      }\n      // application args\n      if (ch == '$') {\n        var ch1 = stream.peek();\n        if (ch1 == '{') {\n          stream.skipTo('}');\n          stream.eat('}');\n          return \"variable-3\";\n        }\n      }\n      // extension\n      stream.eatWhile(/\\w/);\n      cur = stream.current();\n      if (atoms.indexOf(cur) !== -1) {\n        state.extenStart = true;\n        switch (cur) {\n          case 'same':\n            state.extenSame = true;\n            break;\n          case 'include':\n          case 'switch':\n          case 'ignorepat':\n            state.extenInclude = true;\n            break;\n          default:\n            break;\n        }\n        return \"atom\";\n      }\n    }\n    return {\n      startState: function startState() {\n        return {\n          blockComment: false,\n          extenStart: false,\n          extenSame: false,\n          extenInclude: false,\n          extenExten: false,\n          extenPriority: false,\n          extenApplication: false\n        };\n      },\n      token: function token(stream, state) {\n        var cur = '';\n        if (stream.eatSpace()) return null;\n        // extension started\n        if (state.extenStart) {\n          stream.eatWhile(/[^\\s]/);\n          cur = stream.current();\n          if (/^=>?$/.test(cur)) {\n            state.extenExten = true;\n            state.extenStart = false;\n            return \"strong\";\n          } else {\n            state.extenStart = false;\n            stream.skipToEnd();\n            return \"error\";\n          }\n        } else if (state.extenExten) {\n          // set exten and priority\n          state.extenExten = false;\n          state.extenPriority = true;\n          stream.eatWhile(/[^,]/);\n          if (state.extenInclude) {\n            stream.skipToEnd();\n            state.extenPriority = false;\n            state.extenInclude = false;\n          }\n          if (state.extenSame) {\n            state.extenPriority = false;\n            state.extenSame = false;\n            state.extenApplication = true;\n          }\n          return \"tag\";\n        } else if (state.extenPriority) {\n          state.extenPriority = false;\n          state.extenApplication = true;\n          stream.next(); // get comma\n          if (state.extenSame) return null;\n          stream.eatWhile(/[^,]/);\n          return \"number\";\n        } else if (state.extenApplication) {\n          stream.eatWhile(/,/);\n          cur = stream.current();\n          if (cur === ',') return null;\n          stream.eatWhile(/\\w/);\n          cur = stream.current().toLowerCase();\n          state.extenApplication = false;\n          if (apps.indexOf(cur) !== -1) {\n            return \"def strong\";\n          }\n        } else {\n          return basicToken(stream, state);\n        }\n        return null;\n      },\n      blockCommentStart: \";--\",\n      blockCommentEnd: \"--;\",\n      lineComment: \";\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-asterisk\", \"asterisk\");\n});"],"sourceRoot":""}