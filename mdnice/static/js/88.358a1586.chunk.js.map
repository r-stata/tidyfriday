{"version":3,"sources":["../node_modules/_codemirror@5.65.12@codemirror/mode/rpm/rpm.js"],"names":["CodeMirror","defineMode","headerSeparator","headerLine","simpleEmail","token","stream","sol","match","next","defineMIME","arch","preamble","section","control_flow_complex","control_flow_simple","operators","startState","controlFlow","macroParameters","state","ch","peek","skipToEnd","eol","mod","__webpack_require__"],"mappings":"+EAWC,SAAAA,GACD,aAEAA,EAAAC,WAAA,yBACA,IAAAC,EAAA,OACAC,EAAA,sIACAC,EAAA,oBACA,OACAC,MAAA,SAAAC,GACA,GAAAA,EAAAC,MAAA,CACA,GAAAD,EAAAE,MAAAN,GACA,YAEA,GAAAI,EAAAE,MAAAL,GACA,YAGA,OAAAG,EAAAE,MAAAJ,GACA,UAEAE,EAAAG,OACA,UAIAT,EAAAU,WAAA,oCAIAV,EAAAC,WAAA,sBACA,IAAAU,EAAA,qHACAC,EAAA,mBACAC,EAAA,2NACAC,EAAA,wBACAC,EAAA,iBACAC,EAAA,0CAEA,OACAC,WAAA,WACA,OACAC,aAAA,EACAC,iBAAA,EACAN,SAAA,IAGAR,MAAA,SAAAC,EAAAc,GACA,IAAAC,EAAAf,EAAAgB,OACA,QAAAD,EAEA,OADAf,EAAAiB,YACA,UAEA,GAAAjB,EAAAC,MAAA,CACA,GAAAD,EAAAE,MAAAI,GACA,eAEA,GAAAN,EAAAE,MAAAK,GACA,aAGA,GAAAP,EAAAE,MAAA,UACA,YAEA,GAAAF,EAAAE,MAAA,cACA,YAGA,GAAAF,EAAAE,MAAAO,GACA,gBAEA,GAAAT,EAAAE,MAAAM,GAEA,OADAM,EAAAF,aAAA,EACA,UAEA,GAAAE,EAAAF,YAAA,CACA,GAAAZ,EAAAE,MAAAQ,GACA,iBAEA,GAAAV,EAAAE,MAAA,UACA,eAEAF,EAAAkB,QACAJ,EAAAF,aAAA,GAGA,GAAAZ,EAAAE,MAAAG,GAIA,OAHAL,EAAAkB,QACAJ,EAAAF,aAAA,GAEA,SAIA,GAAAZ,EAAAE,MAAA,WAIA,OAHAF,EAAAE,MAAA,OACAY,EAAAD,iBAAA,GAEA,UAEA,GAAAC,EAAAD,gBAAA,CACA,GAAAb,EAAAE,MAAA,QACA,eAEA,GAAAF,EAAAE,MAAA,KAEA,OADAY,EAAAD,iBAAA,EACA,UAKA,OAAAb,EAAAE,MAAA,0BACAF,EAAAkB,QACAJ,EAAAF,aAAA,GAEA,QAIAZ,EAAAG,OACA,UAIAT,EAAAU,WAAA,8BA/HAe,CAAQC,EAAQ","file":"static/js/88.358a1586.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"rpm-changes\", function () {\n    var headerSeparator = /^-+$/;\n    var headerLine = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)  ?\\d{1,2} \\d{2}:\\d{2}(:\\d{2})? [A-Z]{3,4} \\d{4} - /;\n    var simpleEmail = /^[\\w+.-]+@[\\w.-]+/;\n    return {\n      token: function token(stream) {\n        if (stream.sol()) {\n          if (stream.match(headerSeparator)) {\n            return 'tag';\n          }\n          if (stream.match(headerLine)) {\n            return 'tag';\n          }\n        }\n        if (stream.match(simpleEmail)) {\n          return 'string';\n        }\n        stream.next();\n        return null;\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-rpm-changes\", \"rpm-changes\");\n\n  // Quick and dirty spec file highlighting\n\n  CodeMirror.defineMode(\"rpm-spec\", function () {\n    var arch = /^(i386|i586|i686|x86_64|ppc64le|ppc64|ppc|ia64|s390x|s390|sparc64|sparcv9|sparc|noarch|alphaev6|alpha|hppa|mipsel)/;\n    var preamble = /^[a-zA-Z0-9()]+:/;\n    var section = /^%(debug_package|package|description|prep|build|install|files|clean|changelog|preinstall|preun|postinstall|postun|pretrans|posttrans|pre|post|triggerin|triggerun|verifyscript|check|triggerpostun|triggerprein|trigger)/;\n    var control_flow_complex = /^%(ifnarch|ifarch|if)/; // rpm control flow macros\n    var control_flow_simple = /^%(else|endif)/; // rpm control flow macros\n    var operators = /^(\\!|\\?|\\<\\=|\\<|\\>\\=|\\>|\\=\\=|\\&\\&|\\|\\|)/; // operators in control flow macros\n\n    return {\n      startState: function startState() {\n        return {\n          controlFlow: false,\n          macroParameters: false,\n          section: false\n        };\n      },\n      token: function token(stream, state) {\n        var ch = stream.peek();\n        if (ch == \"#\") {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n        if (stream.sol()) {\n          if (stream.match(preamble)) {\n            return \"header\";\n          }\n          if (stream.match(section)) {\n            return \"atom\";\n          }\n        }\n        if (stream.match(/^\\$\\w+/)) {\n          return \"def\";\n        } // Variables like '$RPM_BUILD_ROOT'\n        if (stream.match(/^\\$\\{\\w+\\}/)) {\n          return \"def\";\n        } // Variables like '${RPM_BUILD_ROOT}'\n\n        if (stream.match(control_flow_simple)) {\n          return \"keyword\";\n        }\n        if (stream.match(control_flow_complex)) {\n          state.controlFlow = true;\n          return \"keyword\";\n        }\n        if (state.controlFlow) {\n          if (stream.match(operators)) {\n            return \"operator\";\n          }\n          if (stream.match(/^(\\d+)/)) {\n            return \"number\";\n          }\n          if (stream.eol()) {\n            state.controlFlow = false;\n          }\n        }\n        if (stream.match(arch)) {\n          if (stream.eol()) {\n            state.controlFlow = false;\n          }\n          return \"number\";\n        }\n\n        // Macros like '%make_install' or '%attr(0775,root,root)'\n        if (stream.match(/^%[\\w]+/)) {\n          if (stream.match('(')) {\n            state.macroParameters = true;\n          }\n          return \"keyword\";\n        }\n        if (state.macroParameters) {\n          if (stream.match(/^\\d+/)) {\n            return \"number\";\n          }\n          if (stream.match(')')) {\n            state.macroParameters = false;\n            return \"keyword\";\n          }\n        }\n\n        // Macros like '%{defined fedora}'\n        if (stream.match(/^%\\{\\??[\\w \\-\\:\\!]+\\}/)) {\n          if (stream.eol()) {\n            state.controlFlow = false;\n          }\n          return \"def\";\n        }\n\n        //TODO: Include bash script sub-parser (CodeMirror supports that)\n        stream.next();\n        return null;\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-rpm-spec\", \"rpm-spec\");\n});"],"sourceRoot":""}