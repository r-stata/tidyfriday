{"version":3,"sources":["../node_modules/_codemirror@5.65.12@codemirror/mode/z80/z80.js"],"names":["CodeMirror","defineMode","_config","parserConfig","keywords1","keywords2","ez80","variables1","variables2","errors","numbers","startState","context","token","stream","state","column","eatSpace","w","eatWhile","eat","current","indentation","match","test","skipToEnd","next","sol","defineMIME","name","mod","__webpack_require__"],"mappings":"gFAWC,SAAAA,GACD,aAEAA,EAAAC,WAAA,eAAAC,EAAAC,GACA,IACAC,EAAAC,EADAC,EAAAH,EAAAG,KAEAA,GACAF,EAAA,mQACAC,EAAA,mEAEAD,EAAA,iLACAC,EAAA,4CAEA,IAAAE,EAAA,0CACAC,EAAA,wBACAC,EAAA,oCACAC,EAAA,uCACA,OACAC,WAAA,WACA,OACAC,QAAA,IAGAC,MAAA,SAAAC,EAAAC,GAEA,GADAD,EAAAE,WAAAD,EAAAH,QAAA,GACAE,EAAAG,WAAA,YACA,IAAAC,EACA,GAAAJ,EAAAK,SAAA,OAKA,GAJAb,GAAAQ,EAAAM,IAAA,MACAN,EAAAK,SAAA,MAEAD,EAAAJ,EAAAO,WACAP,EAAAQ,cAmBW,OAAAR,EAAAS,MAAAb,GACX,SAEA,KArBA,OAAAK,EAAAH,SAAA,GAAAG,EAAAH,UAAAL,EAAAiB,KAAAN,GAEA,OADAH,EAAAH,QAAA,EACA,OAEA,MAAAG,EAAAH,SAAAJ,EAAAgB,KAAAN,GAEA,OADAH,EAAAH,QAAA,EACA,OAEA,GAAAR,EAAAoB,KAAAN,GAEA,OADAH,EAAAH,QAAA,EACA,UACa,GAAAP,EAAAmB,KAAAN,GAEb,OADAH,EAAAH,QAAA,EACA,UACa,MAAAG,EAAAH,SAAAF,EAAAc,KAAAN,GACb,eAEA,GAAAT,EAAAe,KAAAN,GAAA,kBAMS,IAAAJ,EAAAM,IAAA,KAET,OADAN,EAAAW,YACA,UACS,GAAAX,EAAAM,IAAA,MACT,MAAAF,EAAAJ,EAAAY,SACA,KAAAR,GACA,MAAAA,GAAAJ,EAAAY,OAEA,eACS,GAAAZ,EAAAM,IAAA,MACT,GAAAN,EAAAS,MAAA,6BACS,GAAAT,EAAAM,IAAA,MAAAN,EAAAa,OAAAb,EAAAM,IAAA,MAET,GADAL,EAAAH,QAAA,EACAE,EAAAK,SAAA,uBACS,GAAAL,EAAAM,IAAA,MACT,GAAAN,EAAAK,SAAA,gCACS,GAAAL,EAAAM,IAAA,MACT,GAAAN,EAAAK,SAAA,4BAEAL,EAAAY,OAEA,gBAIA1B,EAAA4B,WAAA,oBACA5B,EAAA4B,WAAA,eACAC,KAAA,MACAvB,MAAA,IAzFAwB,CAAQC,EAAQ","file":"static/js/122.82d8d64a.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode('z80', function (_config, parserConfig) {\n    var ez80 = parserConfig.ez80;\n    var keywords1, keywords2;\n    if (ez80) {\n      keywords1 = /^(exx?|(ld|cp)([di]r?)?|[lp]ea|pop|push|ad[cd]|cpl|daa|dec|inc|neg|sbc|sub|and|bit|[cs]cf|x?or|res|set|r[lr]c?a?|r[lr]d|s[lr]a|srl|djnz|nop|[de]i|halt|im|in([di]mr?|ir?|irx|2r?)|ot(dmr?|[id]rx|imr?)|out(0?|[di]r?|[di]2r?)|tst(io)?|slp)(\\.([sl]?i)?[sl])?\\b/i;\n      keywords2 = /^(((call|j[pr]|rst|ret[in]?)(\\.([sl]?i)?[sl])?)|(rs|st)mix)\\b/i;\n    } else {\n      keywords1 = /^(exx?|(ld|cp|in)([di]r?)?|pop|push|ad[cd]|cpl|daa|dec|inc|neg|sbc|sub|and|bit|[cs]cf|x?or|res|set|r[lr]c?a?|r[lr]d|s[lr]a|srl|djnz|nop|rst|[de]i|halt|im|ot[di]r|out[di]?)\\b/i;\n      keywords2 = /^(call|j[pr]|ret[in]?|b_?(call|jump))\\b/i;\n    }\n    var variables1 = /^(af?|bc?|c|de?|e|hl?|l|i[xy]?|r|sp)\\b/i;\n    var variables2 = /^(n?[zc]|p[oe]?|m)\\b/i;\n    var errors = /^([hl][xy]|i[xy][hl]|slia|sll)\\b/i;\n    var numbers = /^([\\da-f]+h|[0-7]+o|[01]+b|\\d+d?)\\b/i;\n    return {\n      startState: function startState() {\n        return {\n          context: 0\n        };\n      },\n      token: function token(stream, state) {\n        if (!stream.column()) state.context = 0;\n        if (stream.eatSpace()) return null;\n        var w;\n        if (stream.eatWhile(/\\w/)) {\n          if (ez80 && stream.eat('.')) {\n            stream.eatWhile(/\\w/);\n          }\n          w = stream.current();\n          if (stream.indentation()) {\n            if ((state.context == 1 || state.context == 4) && variables1.test(w)) {\n              state.context = 4;\n              return 'var2';\n            }\n            if (state.context == 2 && variables2.test(w)) {\n              state.context = 4;\n              return 'var3';\n            }\n            if (keywords1.test(w)) {\n              state.context = 1;\n              return 'keyword';\n            } else if (keywords2.test(w)) {\n              state.context = 2;\n              return 'keyword';\n            } else if (state.context == 4 && numbers.test(w)) {\n              return 'number';\n            }\n            if (errors.test(w)) return 'error';\n          } else if (stream.match(numbers)) {\n            return 'number';\n          } else {\n            return null;\n          }\n        } else if (stream.eat(';')) {\n          stream.skipToEnd();\n          return 'comment';\n        } else if (stream.eat('\"')) {\n          while (w = stream.next()) {\n            if (w == '\"') break;\n            if (w == '\\\\') stream.next();\n          }\n          return 'string';\n        } else if (stream.eat('\\'')) {\n          if (stream.match(/\\\\?.'/)) return 'number';\n        } else if (stream.eat('.') || stream.sol() && stream.eat('#')) {\n          state.context = 5;\n          if (stream.eatWhile(/\\w/)) return 'def';\n        } else if (stream.eat('$')) {\n          if (stream.eatWhile(/[\\da-f]/i)) return 'number';\n        } else if (stream.eat('%')) {\n          if (stream.eatWhile(/[01]/)) return 'number';\n        } else {\n          stream.next();\n        }\n        return null;\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-z80\", \"z80\");\n  CodeMirror.defineMIME(\"text/x-ez80\", {\n    name: \"z80\",\n    ez80: true\n  });\n});"],"sourceRoot":""}