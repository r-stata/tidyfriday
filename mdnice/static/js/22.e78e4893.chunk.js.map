{"version":3,"sources":["../node_modules/_codemirror@5.65.12@codemirror/mode/nsis/nsis.js","../node_modules/_codemirror@5.65.12@codemirror/addon/mode/simple.js"],"names":["CodeMirror","defineSimpleMode","start","regex","token","indent","dedent","next","comment","meta","electricInput","blockCommentStart","blockCommentEnd","lineComment","defineMIME","mod","__webpack_require__","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","unicode","source","String","Rule","data","push","this","apply","replace","result","i","length","asToken","tokenFunction","config","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","m","mode","endScan","exec","current","index","curState","rule","matches","sol","stack","pop","enterLocalMode","indentation","indentUnit","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","getMode","lState","startState","forceEnd","indentFunction","textAfter","line","dontIndentStates","arr","indexOf","Pass","rules","scan","dedentIfLineStart","slice","defineMode","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode"],"mappings":"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","file":"static/js/22.e78e4893.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// Author: Jan T. Sott (http://github.com/idleberg)\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"nsis\", {\n    start: [\n    // Numbers\n    {\n      regex: /(?:[+-]?)(?:0x[\\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\\d+.?\\d*)/,\n      token: \"number\"\n    },\n    // Strings\n    {\n      regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/,\n      token: \"string\"\n    }, {\n      regex: /'(?:[^\\\\']|\\\\.)*'?/,\n      token: \"string\"\n    }, {\n      regex: /`(?:[^\\\\`]|\\\\.)*`?/,\n      token: \"string\"\n    },\n    // Compile Time Commands\n    {\n      regex: /^\\s*(?:\\!(addincludedir|addplugindir|appendfile|cd|define|delfile|echo|error|execute|finalize|getdllversion|gettlbversion|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|uninstfinalize|verbose|warning))\\b/i,\n      token: \"keyword\"\n    },\n    // Conditional Compilation\n    {\n      regex: /^\\s*(?:\\!(if(?:n?def)?|ifmacron?def|macro))\\b/i,\n      token: \"keyword\",\n      indent: true\n    }, {\n      regex: /^\\s*(?:\\!(else|endif|macroend))\\b/i,\n      token: \"keyword\",\n      dedent: true\n    },\n    // Runtime Commands\n    {\n      regex: /^\\s*(?:Abort|AddBrandingImage|AddSize|AllowRootDirInstall|AllowSkipFiles|AutoCloseWindow|BGFont|BGGradient|BrandingText|BringToFront|Call|CallInstDLL|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|CreateDirectory|CreateFont|CreateShortCut|Delete|DeleteINISec|DeleteINIStr|DeleteRegKey|DeleteRegValue|DetailPrint|DetailsButtonText|DirText|DirVar|DirVerify|EnableWindow|EnumRegKey|EnumRegValue|Exch|Exec|ExecShell|ExecShellWait|ExecWait|ExpandEnvStrings|File|FileBufSize|FileClose|FileErrorText|FileOpen|FileRead|FileReadByte|FileReadUTF16LE|FileReadWord|FileWriteUTF16LE|FileSeek|FileWrite|FileWriteByte|FileWriteWord|FindClose|FindFirst|FindNext|FindWindow|FlushINI|GetCurInstType|GetCurrentAddress|GetDlgItem|GetDLLVersion|GetDLLVersionLocal|GetErrorLevel|GetFileTime|GetFileTimeLocal|GetFullPathName|GetFunctionAddress|GetInstDirError|GetKnownFolderPath|GetLabelAddress|GetTempFileName|GetWinVer|Goto|HideWindow|Icon|IfAbort|IfErrors|IfFileExists|IfRebootFlag|IfRtlLanguage|IfShellVarContextAll|IfSilent|InitPluginsDir|InstallButtonText|InstallColors|InstallDir|InstallDirRegKey|InstProgressFlags|InstType|InstTypeGetText|InstTypeSetText|Int64Cmp|Int64CmpU|Int64Fmt|IntCmp|IntCmpU|IntFmt|IntOp|IntPtrCmp|IntPtrCmpU|IntPtrOp|IsWindow|LangString|LicenseBkColor|LicenseData|LicenseForceSelection|LicenseLangString|LicenseText|LoadAndSetImage|LoadLanguageFile|LockWindow|LogSet|LogText|ManifestDPIAware|ManifestLongPathAware|ManifestMaxVersionTested|ManifestSupportedOS|MessageBox|MiscButtonText|Name|Nop|OutFile|Page|PageCallbacks|PEAddResource|PEDllCharacteristics|PERemoveResource|PESubsysVer|Pop|Push|Quit|ReadEnvStr|ReadINIStr|ReadRegDWORD|ReadRegStr|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|SectionGetFlags|SectionGetInstTypes|SectionGetSize|SectionGetText|SectionIn|SectionSetFlags|SectionSetInstTypes|SectionSetSize|SectionSetText|SendMessage|SetAutoClose|SetBrandingImage|SetCompress|SetCompressor|SetCompressorDictSize|SetCtlColors|SetCurInstType|SetDatablockOptimize|SetDateSave|SetDetailsPrint|SetDetailsView|SetErrorLevel|SetErrors|SetFileAttributes|SetFont|SetOutPath|SetOverwrite|SetRebootFlag|SetRegView|SetShellVarContext|SetSilent|ShowInstDetails|ShowUninstDetails|ShowWindow|SilentInstall|SilentUnInstall|Sleep|SpaceTexts|StrCmp|StrCmpS|StrCpy|StrLen|SubCaption|Target|Unicode|UninstallButtonText|UninstallCaption|UninstallIcon|UninstallSubCaption|UninstallText|UninstPage|UnRegDLL|Var|VIAddVersionKey|VIFileVersion|VIProductVersion|WindowIcon|WriteINIStr|WriteRegBin|WriteRegDWORD|WriteRegExpandStr|WriteRegMultiStr|WriteRegNone|WriteRegStr|WriteUninstaller|XPStyle)\\b/i,\n      token: \"keyword\"\n    }, {\n      regex: /^\\s*(?:Function|PageEx|Section(?:Group)?)\\b/i,\n      token: \"keyword\",\n      indent: true\n    }, {\n      regex: /^\\s*(?:(Function|PageEx|Section(?:Group)?)End)\\b/i,\n      token: \"keyword\",\n      dedent: true\n    },\n    // Command Options\n    {\n      regex: /\\b(?:ARCHIVE|FILE_ATTRIBUTE_ARCHIVE|FILE_ATTRIBUTE_HIDDEN|FILE_ATTRIBUTE_NORMAL|FILE_ATTRIBUTE_OFFLINE|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM|FILE_ATTRIBUTE_TEMPORARY|HIDDEN|HKCC|HKCR(32|64)?|HKCU(32|64)?|HKDD|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_DYN_DATA|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|HKLM(32|64)?|HKPD|HKU|IDABORT|IDCANCEL|IDD_DIR|IDD_INST|IDD_INSTFILES|IDD_LICENSE|IDD_SELCOM|IDD_UNINST|IDD_VERIFY|IDIGNORE|IDNO|IDOK|IDRETRY|IDYES|MB_ABORTRETRYIGNORE|MB_DEFBUTTON1|MB_DEFBUTTON2|MB_DEFBUTTON3|MB_DEFBUTTON4|MB_ICONEXCLAMATION|MB_ICONINFORMATION|MB_ICONQUESTION|MB_ICONSTOP|MB_OK|MB_OKCANCEL|MB_RETRYCANCEL|MB_RIGHT|MB_RTLREADING|MB_SETFOREGROUND|MB_TOPMOST|MB_USERICON|MB_YESNO|MB_YESNOCANCEL|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SW_HIDE|SW_SHOWDEFAULT|SW_SHOWMAXIMIZED|SW_SHOWMINIMIZED|SW_SHOWNORMAL|SYSTEM|TEMPORARY)\\b/i,\n      token: \"atom\"\n    }, {\n      regex: /\\b(?:admin|all|amd64-unicode|auto|both|bottom|bzip2|components|current|custom|directory|false|force|hide|highest|ifdiff|ifnewer|instfiles|lastused|leave|left|license|listonly|lzma|nevershow|none|normal|notset|off|on|right|show|silent|silentlog|textonly|top|true|try|un\\.components|un\\.custom|un\\.directory|un\\.instfiles|un\\.license|uninstConfirm|user|Win10|Win7|Win8|WinVista|x-86-(ansi|unicode)|zlib)\\b/i,\n      token: \"builtin\"\n    },\n    // LogicLib.nsh\n    {\n      regex: /\\$\\{(?:And(?:If(?:Not)?|Unless)|Break|Case(?:2|3|4|5|Else)?|Continue|Default|Do(?:Until|While)?|Else(?:If(?:Not)?|Unless)?|End(?:If|Select|Switch)|Exit(?:Do|For|While)|For(?:Each)?|If(?:Cmd|Not(?:Then)?|Then)?|Loop(?:Until|While)?|Or(?:If(?:Not)?|Unless)|Select|Switch|Unless|While)\\}/i,\n      token: \"variable-2\",\n      indent: true\n    },\n    // FileFunc.nsh\n    {\n      regex: /\\$\\{(?:BannerTrimPath|DirState|DriveSpace|Get(BaseName|Drives|ExeName|ExePath|FileAttributes|FileExt|FileName|FileVersion|Options|OptionsS|Parameters|Parent|Root|Size|Time)|Locate|RefreshShellIcons)\\}/i,\n      token: \"variable-2\",\n      dedent: true\n    },\n    // Memento.nsh\n    {\n      regex: /\\$\\{(?:Memento(?:Section(?:Done|End|Restore|Save)?|UnselectedSection))\\}/i,\n      token: \"variable-2\",\n      dedent: true\n    },\n    // TextFunc.nsh\n    {\n      regex: /\\$\\{(?:Config(?:Read|ReadS|Write|WriteS)|File(?:Join|ReadFromEnd|Recode)|Line(?:Find|Read|Sum)|Text(?:Compare|CompareS)|TrimNewLines)\\}/i,\n      token: \"variable-2\",\n      dedent: true\n    },\n    // WinVer.nsh\n    {\n      regex: /\\$\\{(?:(?:At(?:Least|Most)|Is)(?:ServicePack|Win(?:7|8|10|95|98|200(?:0|3|8(?:R2)?)|ME|NT4|Vista|XP))|Is(?:NT|Server))\\}/i,\n      token: \"variable\",\n      dedent: true\n    },\n    // WordFunc.nsh\n    {\n      regex: /\\$\\{(?:StrFilterS?|Version(?:Compare|Convert)|Word(?:AddS?|Find(?:(?:2|3)X)?S?|InsertS?|ReplaceS?))\\}/i,\n      token: \"variable-2\",\n      dedent: true\n    },\n    // x64.nsh\n    {\n      regex: /\\$\\{(?:RunningX64)\\}/i,\n      token: \"variable\",\n      dedent: true\n    }, {\n      regex: /\\$\\{(?:Disable|Enable)X64FSRedirection\\}/i,\n      token: \"variable-2\",\n      dedent: true\n    },\n    // Line Comment\n    {\n      regex: /(#|;).*/,\n      token: \"comment\"\n    },\n    // Block Comment\n    {\n      regex: /\\/\\*/,\n      token: \"comment\",\n      next: \"comment\"\n    },\n    // Operator\n    {\n      regex: /[-+\\/*=<>!]+/,\n      token: \"operator\"\n    },\n    // Variable\n    {\n      regex: /\\$\\w[\\w\\.]*/,\n      token: \"variable\"\n    },\n    // Constant\n    {\n      regex: /\\${[\\!\\w\\.:-]+}/,\n      token: \"variable-2\"\n    },\n    // Language String\n    {\n      regex: /\\$\\([\\!\\w\\.:-]+\\)/,\n      token: \"variable-3\"\n    }],\n    comment: [{\n      regex: /.*?\\*\\//,\n      token: \"comment\",\n      next: \"start\"\n    }, {\n      regex: /.*/,\n      token: \"comment\"\n    }],\n    meta: {\n      electricInput: /^\\s*((Function|PageEx|Section|Section(Group)?)End|(\\!(endif|macroend))|\\$\\{(End(If|Unless|While)|Loop(Until)|Next)\\})$/i,\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      lineComment: [\"#\", \";\"]\n    }\n  });\n  CodeMirror.defineMIME(\"text/x-nsis\", \"nsis\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function (name, states) {\n    CodeMirror.defineMode(name, function (config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n  CodeMirror.simpleMode = function (config, states) {\n    ensureState(states, \"start\");\n    var states_ = {},\n      meta = states.meta || {},\n      hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [],\n        orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function startState() {\n        return {\n          state: \"start\",\n          pending: null,\n          local: null,\n          localState: null,\n          indent: hasIndentation ? [] : null\n        };\n      },\n      copyState: function copyState(state) {\n        var s = {\n          state: state.state,\n          pending: state.pending,\n          local: state.local,\n          localState: null,\n          indent: state.indent && state.indent.slice(0)\n        };\n        if (state.localState) s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack) s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next) s.persistentStates = {\n          mode: pers.mode,\n          spec: pers.spec,\n          state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n          next: s.persistentStates\n        };\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function innerMode(state) {\n        return state.local && {\n          mode: state.local.mode,\n          state: state.localState\n        };\n      },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop)) mode[prop] = meta[prop];\n    return mode;\n  };\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name)) throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      if (val.unicode) flags += \"u\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val;\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++) result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n  function tokenFunction(states, config) {\n    return function (stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState),\n            m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current()))) stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n          if (rule.data.mode) enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent) state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent) state.indent.pop();\n          var token = rule.token;\n          if (token && token.apply) token = token(matches);\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            for (var j = 2; j < matches.length; j++) if (matches[j]) (state.pending || (state.pending = [])).push({\n              text: matches[j],\n              token: rule.token[j - 1]\n            });\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next) if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers) state.persistentStates = {\n      mode: mode,\n      spec: spec.spec,\n      state: lState,\n      next: state.persistentStates\n    };\n    state.localState = lState;\n    state.local = {\n      mode: mode,\n      end: spec.end && toRegex(spec.end),\n      endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n      endToken: token && token.join ? token[token.length - 1] : token\n    };\n  }\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n  function indentFunction(states, meta) {\n    return function (state, textAfter, line) {\n      if (state.local && state.local.mode.indent) return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1) return CodeMirror.Pass;\n      var pos = state.indent.length - 1,\n        rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});"],"sourceRoot":""}