{"version":3,"sources":["../node_modules/_codemirror@5.65.12@codemirror/mode/pegjs/pegjs.js"],"names":["CodeMirror","defineMode","config","jsMode","getMode","startState","inString","stringType","inComment","inCharacterClass","braced","lhs","localState","token","stream","state","peek","next","match","eol","skipToEnd","text","current","i","length","identifier","indexOf","eatSpace","mod","__webpack_require__"],"mappings":"+EAWC,SAAAA,GACD,aAEAA,EAAAC,WAAA,iBAAAC,GACA,IAAAC,EAAAH,EAAAI,QAAAF,EAAA,cAIA,OACAG,WAAA,WACA,OACAC,UAAA,EACAC,WAAA,KACAC,WAAA,EACAC,kBAAA,EACAC,OAAA,EACAC,KAAA,EACAC,WAAA,OAGAC,MAAA,SAAAC,EAAAC,GAWA,GATAA,EAAAT,UAAAS,EAAAP,WAAA,KAAAM,EAAAE,QAAA,KAAAF,EAAAE,SACAD,EAAAR,WAAAO,EAAAE,OACAF,EAAAG,OACAF,EAAAT,UAAA,GAGAS,EAAAT,UAAAS,EAAAP,YAAAM,EAAAI,MAAA,QACAH,EAAAP,WAAA,GAEAO,EAAAT,SAAA,CACA,KAAAS,EAAAT,WAAAQ,EAAAK,OACAL,EAAAE,SAAAD,EAAAR,YACAO,EAAAG,OACAF,EAAAT,UAAA,GACa,OAAAQ,EAAAE,QACbF,EAAAG,OACAH,EAAAG,QAEAH,EAAAI,MAAA,gBAGA,OAAAH,EAAAJ,IAAA,2BACS,GAAAI,EAAAP,UAAA,CACT,KAAAO,EAAAP,YAAAM,EAAAK,OACAL,EAAAI,MAAA,MACAH,EAAAP,WAAA,EAEAM,EAAAI,MAAA,YAGA,gBACS,GAAAH,EAAAN,iBACT,KAAAM,EAAAN,mBAAAK,EAAAK,OACAL,EAAAI,MAAA,cAAAJ,EAAAI,MAAA,UACAH,EAAAN,kBAAA,OAGS,UAAAK,EAAAE,OAGT,OAFAF,EAAAG,OACAF,EAAAN,kBAAA,EACA,UACS,GAAAK,EAAAI,MAAA,MAET,OADAJ,EAAAM,YACA,UACS,GAAAL,EAAAL,QAAA,MAAAI,EAAAE,OAA8C,CACvD,OAAAD,EAAAH,aACAG,EAAAH,WAAAZ,EAAAK,WAAAF,IAEA,IAAAU,EAAAV,EAAAU,MAAAC,EAAAC,EAAAH,YACAS,EAAAP,EAAAQ,UACA,IAAAT,EACA,QAAAU,EAAA,EAA2BA,EAAAF,EAAAG,OAAiBD,IAC5C,MAAAF,EAAAE,GACAR,EAAAL,SACe,MAAAW,EAAAE,IACfR,EAAAL,SAKA,OAAAG,EACS,GA9ET,SAAAC,GACA,OAAAA,EAAAI,MAAA,2BA6ESO,CAAAX,GACT,YAAAA,EAAAE,OACA,WAEA,aACS,yBAAAU,QAAAZ,EAAAE,QAET,OADAF,EAAAG,OACA,UACSH,EAAAa,YACTb,EAAAG,OAEA,eAGG,cAtGHW,CAAQC,EAAQ,IAAyBA,EAAQ","file":"static/js/78.efbbfb69.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../javascript/javascript\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\", \"../javascript/javascript\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"pegjs\", function (config) {\n    var jsMode = CodeMirror.getMode(config, \"javascript\");\n    function identifier(stream) {\n      return stream.match(/^[a-zA-Z_][a-zA-Z0-9_]*/);\n    }\n    return {\n      startState: function startState() {\n        return {\n          inString: false,\n          stringType: null,\n          inComment: false,\n          inCharacterClass: false,\n          braced: 0,\n          lhs: true,\n          localState: null\n        };\n      },\n      token: function token(stream, state) {\n        //check for state changes\n        if (!state.inString && !state.inComment && (stream.peek() == '\"' || stream.peek() == \"'\")) {\n          state.stringType = stream.peek();\n          stream.next(); // Skip quote\n          state.inString = true; // Update state\n        }\n\n        if (!state.inString && !state.inComment && stream.match('/*')) {\n          state.inComment = true;\n        }\n        if (state.inString) {\n          while (state.inString && !stream.eol()) {\n            if (stream.peek() === state.stringType) {\n              stream.next(); // Skip quote\n              state.inString = false; // Clear flag\n            } else if (stream.peek() === '\\\\') {\n              stream.next();\n              stream.next();\n            } else {\n              stream.match(/^.[^\\\\\\\"\\']*/);\n            }\n          }\n          return state.lhs ? \"property string\" : \"string\"; // Token style\n        } else if (state.inComment) {\n          while (state.inComment && !stream.eol()) {\n            if (stream.match('*/')) {\n              state.inComment = false; // Clear flag\n            } else {\n              stream.match(/^.[^\\*]*/);\n            }\n          }\n          return \"comment\";\n        } else if (state.inCharacterClass) {\n          while (state.inCharacterClass && !stream.eol()) {\n            if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./))) {\n              state.inCharacterClass = false;\n            }\n          }\n        } else if (stream.peek() === '[') {\n          stream.next();\n          state.inCharacterClass = true;\n          return 'bracket';\n        } else if (stream.match('//')) {\n          stream.skipToEnd();\n          return \"comment\";\n        } else if (state.braced || stream.peek() === '{') {\n          if (state.localState === null) {\n            state.localState = CodeMirror.startState(jsMode);\n          }\n          var token = jsMode.token(stream, state.localState);\n          var text = stream.current();\n          if (!token) {\n            for (var i = 0; i < text.length; i++) {\n              if (text[i] === '{') {\n                state.braced++;\n              } else if (text[i] === '}') {\n                state.braced--;\n              }\n            }\n            ;\n          }\n          return token;\n        } else if (identifier(stream)) {\n          if (stream.peek() === ':') {\n            return 'variable';\n          }\n          return 'variable-2';\n        } else if (['[', ']', '(', ')'].indexOf(stream.peek()) != -1) {\n          stream.next();\n          return 'bracket';\n        } else if (!stream.eatSpace()) {\n          stream.next();\n        }\n        return null;\n      }\n    };\n  }, \"javascript\");\n});"],"sourceRoot":""}