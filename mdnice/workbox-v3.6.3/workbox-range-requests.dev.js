this.workbox=this.workbox||{},this.workbox.rangeRequests=function(e,u,g,d){"use strict";try{self.workbox.v["workbox:range-requests:3.6.3"]=1}catch(e){}t=babelHelpers.asyncToGenerator(function*(r,a){try{g.assert.isInstance(r,Request,{moduleName:"workbox-range-requests",funcName:"createPartialResponse",paramName:"request"}),g.assert.isInstance(a,Response,{moduleName:"workbox-range-requests",funcName:"createPartialResponse",paramName:"originalResponse"});var e,t,s,n,o,i,l=r.headers.get("range");if(l)return e=function(e){if(g.assert.isType(e,"string",{moduleName:"workbox-range-requests",funcName:"parseRangeHeader",paramName:"rangeHeader"}),!(e=e.trim().toLowerCase()).startsWith("bytes="))throw new u.WorkboxError("unit-must-be-bytes",{normalizedRangeHeader:e});if(e.includes(","))throw new u.WorkboxError("single-range-only",{normalizedRangeHeader:e});var r=/(\d*)-(\d*)/.exec(e);if(null===r||!r[1]&&!r[2])throw new u.WorkboxError("invalid-range-values",{normalizedRangeHeader:e});return{start:""===r[1]?null:Number(r[1]),end:""===r[2]?null:Number(r[2])}}(l),s=function(e,r,a){if(g.assert.isInstance(e,Blob,{moduleName:"workbox-range-requests",funcName:"calculateEffectiveBoundaries",paramName:"blob"}),(e=e.size)<a||r<0)throw new u.WorkboxError("range-not-satisfiable",{size:e,end:a,start:r});let t,s;return s=null===r?(t=e-a,e):null===a?(t=r,e):(t=r,a+1),{start:t,end:s}}(t=yield a.blob(),e.start,e.end),o=(n=t.slice(s.start,s.end)).size,(i=new Response(n,{status:206,statusText:"Partial Content",headers:a.headers})).headers.set("Content-Length",o),i.headers.set("Content-Range",`bytes ${s.start}-${s.end-1}/`+t.size),i;throw new u.WorkboxError("no-range-header")}catch(e){return d.logger.warn("Unable to construct a partial response; returning a 416 Range Not Satisfiable response instead."),d.logger.groupCollapsed("View details here."),d.logger.unprefixed.log(e),d.logger.unprefixed.log(r),d.logger.unprefixed.log(a),d.logger.groupEnd(),new Response("",{status:416,statusText:"Range Not Satisfiable"})}});let a=function(e,r){return t.apply(this,arguments)};var t;return e.createPartialResponse=a,e.Plugin=class{cachedResponseWillBeUsed({request:e,cachedResponse:r}){return babelHelpers.asyncToGenerator(function*(){return r&&e.headers.has("range")?yield a(e,r):r})()}},e}({},workbox.core._private,workbox.core._private,workbox.core._private);