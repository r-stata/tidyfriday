this.workbox=this.workbox||{},this.workbox.backgroundSync=function(t,o,u,n,l){"use strict";try{self.workbox.v["workbox:background-sync:3.6.3"]=1}catch(e){}const a=["method","referrer","referrerPolicy","mode","credentials","cache","redirect","integrity","keepalive"];class i{static fromRequest(s){return babelHelpers.asyncToGenerator(function*(){var e,t,r={headers:{}};"GET"!==s.method&&(r.body=yield s.clone().blob());for([e,t]of s.headers.entries())r.headers[e]=t;for(const n of a)void 0!==s[n]&&(r[n]=s[n]);return new i({url:s.url,requestInit:r})})()}constructor({url:e,requestInit:t,timestamp:r=Date.now()}){this.url=e,this.requestInit=t,this._timestamp=r}get timestamp(){return this._timestamp}toObject(){return{url:this.url,timestamp:this.timestamp,requestInit:this.requestInit}}toRequest(){return new Request(this.url,this.requestInit)}clone(){var e=Object.assign({},this.requestInit);return e.headers=Object.assign({},this.requestInit.headers),this.requestInit.body&&(e.body=this.requestInit.body.slice()),new i({url:this.url,timestamp:this.timestamp,requestInit:e})}}const r="requests",s="queueName",c="workbox-background-sync";class d{constructor(e){this._queue=e,this._db=new t.DBWrapper("workbox-background-sync",1,{onupgradeneeded:e=>e.target.result.createObjectStore(r,{autoIncrement:!0}).createIndex(s,s,{unique:!1})})}addEntry(e){var t=this;return babelHelpers.asyncToGenerator(function*(){yield t._db.add(r,{queueName:t._queue.name,storableRequest:e.toObject()})})()}getAndRemoveOldestEntry(){var t=this;return babelHelpers.asyncToGenerator(function*(){var[e]=yield t._db.getAllMatching(r,{index:s,query:IDBKeyRange.only(t._queue.name),count:1,includeKeys:!0});if(e)return yield t._db.delete(r,e.primaryKey),new i(e.value.storableRequest)})()}}const y=new Set;class b{constructor(e,{callbacks:t={},maxRetentionTime:r=10080}={}){if(y.has(e))throw new o.WorkboxError("duplicate-queue-name",{name:e});y.add(e),this._name=e,this._callbacks=t,this._maxRetentionTime=r,this._queueStore=new d(this),this._addSyncListener()}get name(){return this._name}addRequest(t){var r=this;return babelHelpers.asyncToGenerator(function*(){n.assert.isInstance(t,Request,{moduleName:"workbox-background-sync",className:"Queue",funcName:"addRequest",paramName:"request"});var e=yield i.fromRequest(t.clone());yield r._runCallback("requestWillEnqueue",e),yield r._queueStore.addEntry(e),yield r._registerSync(),u.logger.log(`Request for '${l.getFriendlyURL(e.url)}' has been
          added to background sync queue '${r._name}'.`)})()}replayRequests(){var i=this;return babelHelpers.asyncToGenerator(function*(){for(var t,e=Date.now(),r=[],n=[];t=yield i._queueStore.getAndRemoveOldestEntry();){var s=t.clone(),a=60*i._maxRetentionTime*1e3;if(!(e-t.timestamp>a)){yield i._runCallback("requestWillReplay",t);a={request:t.toRequest()};try{a.response=yield fetch(a.request.clone()),u.logger.log(`Request for '${l.getFriendlyURL(t.url)}'
             has been replayed`)}catch(e){u.logger.log(`Request for '${l.getFriendlyURL(t.url)}'
             failed to replay`),a.error=e,n.push(s)}r.push(a)}}if(yield i._runCallback("queueDidReplay",r),n.length)throw yield Promise.all(n.map(function(e){return i._queueStore.addEntry(e)})),new o.WorkboxError("queue-replay-failed",{name:i._name,count:n.length})})()}_runCallback(e,...t){var r=this;return babelHelpers.asyncToGenerator(function*(){"function"==typeof r._callbacks[e]&&(yield r._callbacks[e].apply(null,t))})()}_addSyncListener(){"sync"in registration?self.addEventListener("sync",e=>{e.tag===c+":"+this._name&&(u.logger.log(`Background sync for tag '${e.tag}'
                has been received, starting replay now`),e.waitUntil(this.replayRequests()))}):(u.logger.log("Background sync replaying without background sync event"),this.replayRequests())}_registerSync(){var t=this;return babelHelpers.asyncToGenerator(function*(){if("sync"in registration)try{yield registration.sync.register(c+":"+t._name)}catch(e){u.logger.warn(`Unable to register sync event for '${t._name}'.`,e)}})()}static get _queueNames(){return y}}return Object.freeze({Queue:b,Plugin:class{constructor(...e){this._queue=new b(...e),this.fetchDidFail=this.fetchDidFail.bind(this)}fetchDidFail({request:e}){var t=this;return babelHelpers.asyncToGenerator(function*(){yield t._queue.addRequest(e)})()}}})}(workbox.core._private,workbox.core._private,workbox.core._private,workbox.core._private,workbox.core._private);