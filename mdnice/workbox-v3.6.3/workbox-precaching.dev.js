this.workbox=this.workbox||{},this.workbox.precaching=function(r,g,t,n,o,s,y,h){"use strict";try{self.workbox.v["workbox:precaching:3.6.3"]=1}catch(e){}class a{constructor(e,r,t,n){this._originalInput=e,this._entryId=r,this._revision=t;e=new Request(r,{credentials:"same-origin"});this._cacheRequest=e,this._networkRequest=n?this._cacheBustRequest(e):e}_cacheBustRequest(e){let r=e.url;var t,n,e={credentials:"same-origin"};return"cache"in Request.prototype?e.cache="reload":(t=new URL(r,location),n=encodeURIComponent,t.search+=(t.search?"&":"")+n("_workbox-cache-bust")+"="+n(this._revision),r=t.toString()),new Request(r,e)}}const i="revision",c="precached-details-models";class l{constructor(e){e=e.replace(/[^\w-]/g,"_");this._db=new r.DBWrapper(e,2,{onupgradeneeded:this._handleUpgrade})}_handleUpgrade(e){var r=e.target.result;e.oldVersion<2&&(r.objectStoreNames.contains("workbox-precaching")&&r.deleteObjectStore("workbox-precaching"),r.objectStoreNames.contains(c)&&r.deleteObjectStore(c)),r.createObjectStore(c)}_isEntryCached(e,r){var t=this;return babelHelpers.asyncToGenerator(function*(){return(yield t._getRevision(r._entryId))===r._revision&&!!(yield(yield caches.open(e)).match(r._cacheRequest))})()}_getAllEntries(){var e=this;return babelHelpers.asyncToGenerator(function*(){return yield e._db.getAllMatching(c,{includeKeys:!0})})()}_getRevision(r){var t=this;return babelHelpers.asyncToGenerator(function*(){var e=yield t._db.get(c,r);return e?e[i]:null})()}_addEntry(e){var r=this;return babelHelpers.asyncToGenerator(function*(){yield r._db.put(c,{revision:e._revision,url:e._cacheRequest.url},e._entryId)})()}_deleteEntry(e){var r=this;return babelHelpers.asyncToGenerator(function*(){yield r._db.delete(c,e)})()}}const _=(e,r)=>{0!==r.length&&(g.logger.groupCollapsed(e),r.forEach(e=>{g.logger.log(e._originalInput)}),g.logger.groupEnd())};const u=(e,r)=>{g.logger.groupCollapsed(e),r.forEach(e=>{g.logger.log(e)}),g.logger.groupEnd()};var d;d=babelHelpers.asyncToGenerator(function*(e){var e=e.clone(),r=yield"body"in e?Promise.resolve(e.body):e.blob();return new Response(r,{headers:e.headers,status:e.status,statusText:e.statusText})});const p=function(e){return d.apply(this,arguments)};class e{constructor(e){this._cacheName=t.cacheNames.getPrecacheName(e),this._entriesToCacheMap=new Map,this._precacheDetailsModel=new l(this._cacheName)}addToCacheList(e){y.assert.isArray(e,{moduleName:"workbox-precaching",className:"PrecacheController",funcName:"addToCacheList",paramName:"entries"}),e.map(e=>{this._addEntryToCacheList(this._parseEntry(e))})}_parseEntry(e){switch(typeof e){case"string":if(0===e.length)throw new n.WorkboxError("add-to-cache-list-unexpected-type",{entry:e});return new a(e,e,e);case"object":if(e&&e.url)return new a(e,e.url,e.revision||e.url,!!e.revision);throw new n.WorkboxError("add-to-cache-list-unexpected-type",{entry:e});default:throw new n.WorkboxError("add-to-cache-list-unexpected-type",{entry:e})}}_addEntryToCacheList(e){var r=this._entriesToCacheMap.get(e._entryId);if(r){if(r._revision!==e._revision)throw new n.WorkboxError("add-to-cache-list-conflicting-entries",{firstEntry:r._originalInput,secondEntry:e._originalInput})}else this._entriesToCacheMap.set(e._entryId,e)}install({suppressWarnings:h=!1,event:u,plugins:d}={}){var p=this;return babelHelpers.asyncToGenerator(function*(){if(!0!==h){var e=p._entriesToCacheMap;const c=[];e.forEach(e=>{"string"!=typeof e&&e._originalInput.revision||c.push(e._originalInput)}),0!==c.length&&(g.logger.groupCollapsed("Are your precached assets revisioned?"),e=c.map(e=>"    - "+JSON.stringify(e)).join(`
`),g.logger.warn("The following precache entries might not be revisioned:\n\n"+e+`

`),g.logger.unprefixed.warn("You can learn more about why this might be a problem here: https://developers.google.com/web/tools/workbox/modules/workbox-precaching"),g.logger.groupEnd())}d&&y.assert.isArray(d,{moduleName:"workbox-precaching",className:"PrecacheController",funcName:"install",paramName:"plugins"});const r=yield caches.open(p._getTempCacheName());var e=yield r.keys(),t=(yield Promise.all(e.map(function(e){return r.delete(e)})),[]),n=[];for(const l of p._entriesToCacheMap.values())((yield p._precacheDetailsModel._isEntryCached(p._cacheName,l))?n:t).push(l);yield Promise.all(t.map(function(e){return p._cacheEntryInTemp({event:u,plugins:d,precacheEntry:e})}));{var a=t;var o=n;var s=a.length,i=o.length;let e=`Precaching ${s} file${1===s?"":"s"}.`;0<i&&(e+=` ${i} `+`file${1===i?" is":"s are"} already cached.`),g.logger.groupCollapsed(e),_("View precached URLs.",a),_("View URLs that were already precached.",o),g.logger.groupEnd()}return{updatedEntries:t,notUpdatedEntries:n}})()}activate(n={}){var a=this;return babelHelpers.asyncToGenerator(function*(){var e=yield caches.open(a._getTempCacheName());for(const t of yield e.keys()){var r=yield e.match(t);yield s.cacheWrapper.put({cacheName:a._cacheName,request:t,response:r,plugins:n.plugins}),yield e.delete(t)}return a._cleanup()})()}_getTempCacheName(){return this._cacheName+"-temp"}_cacheEntryInTemp({precacheEntry:r,event:t,plugins:n}){var a=this;return babelHelpers.asyncToGenerator(function*(){let e=yield o.fetchWrapper.fetch({request:r._networkRequest,event:t,fetchOptions:null,plugins:n});return e.redirected&&(e=yield p(e)),yield s.cacheWrapper.put({cacheName:a._getTempCacheName(),request:r._cacheRequest,response:e,event:t,plugins:n}),yield a._precacheDetailsModel._addEntry(r),!0})()}_cleanup(){var i=this;return babelHelpers.asyncToGenerator(function*(){const r=[];i._entriesToCacheMap.forEach(function(e){e=new URL(e._cacheRequest.url,location).toString();r.push(e)});var e,t,n,a,[o,s]=yield Promise.all([i._cleanupCache(r),i._cleanupDetailsModel(r)]);return t=s,0===(e=o).length&&0===t.length||(n=e.length,a=t.length,g.logger.groupCollapsed(`During precaching cleanup, ${n+" cached "+`request${1===n?" was":"s were"} deleted`} and `+(a+" "+`${1===a?"entry":"entries"} `+`${1===a?"was":"were"} deleted from IndexedDB.`)),u("Deleted Cache Requests",e),u("Revision Details Deleted from DB",t),g.logger.groupEnd()),{deletedCacheRequests:o,deletedRevisionDetails:s}})()}_cleanupCache(t){var n=this;return babelHelpers.asyncToGenerator(function*(){if(!(yield caches.has(n._cacheName)))return[];const r=yield caches.open(n._cacheName);var e=(yield r.keys()).filter(function(e){return!t.includes(new URL(e.url,location).toString())});return yield Promise.all(e.map(function(e){return r.delete(e)})),e.map(function(e){return e.url})})()}_cleanupDetailsModel(r){var t=this;return babelHelpers.asyncToGenerator(function*(){var e=(yield t._precacheDetailsModel._getAllEntries()).filter(function(e){e=new URL(e.value.url,location).toString();return!r.includes(e)});return yield Promise.all(e.map(function(e){return t._precacheDetailsModel._deleteEntry(e.primaryKey)})),e.map(function(e){return e.value.url})})()}getCachedUrls(){return Array.from(this._entriesToCacheMap.keys()).map(e=>new URL(e,location).href)}}var f=Object.freeze({PrecacheController:e});y.assert.isSwEnv("workbox-precaching");let m=!1,v=!1,b=!1,w=[];const E=t.cacheNames.getPrecacheName(),R=new e(E),x=(e,{ignoreUrlParametersMatching:r=[/^utm_/],directoryIndex:t="index.html",cleanUrls:n=!0,urlManipulation:a=null}={})=>{var o,e=new URL(e,location),s=(e.hash="",o=r,s=(r=e).search.slice(1).split("&").map(e=>e.split("=")).filter(r=>o.every(e=>!e.test(r[0]))).map(e=>e.join("=")),(r=new URL(r)).search=s.join("&"),r);let i=[e,s];t&&s.pathname.endsWith("/")&&((r=new URL(s)).pathname+=t,i.push(r)),n&&((t=new URL(s)).pathname+=".html",i.push(t)),a&&(r=a({url:e}),i=i.concat(r));var c=R.getCachedUrls();for(const l of i)if(-1!==c.indexOf(l.href))return g.logger.debug("Precaching found a match for "+h.getFriendlyURL(l.toString())),l.href;return null},C={precache:e=>{R.addToCacheList(e),m||e.length<=0||(m=!0,self.addEventListener("install",e=>{e.waitUntil(R.install({event:e,plugins:w,suppressWarnings:b}))}),self.addEventListener("activate",e=>{e.waitUntil(R.activate({event:e,plugins:w}))}))},addRoute:e=>{v||(v=!0,self.addEventListener("fetch",r=>{const t=x(r.request.url,e);if(t){let e=caches.open(E).then(e=>e.match(t)).then(e=>e||(g.logger.debug("The precached response for "+`${h.getFriendlyURL(t)} in ${E} was not found. `+"Falling back to the network instead."),fetch(t)));e=e.then(e=>(g.logger.groupCollapsed("Precaching is responding to: "+h.getFriendlyURL(r.request.url)),g.logger.log("Serving the precached url: "+t),g.logger.groupCollapsed("View request details here."),g.logger.unprefixed.log(r.request),g.logger.groupEnd(),g.logger.groupCollapsed("View response details here."),g.logger.unprefixed.log(e),g.logger.groupEnd(),g.logger.groupEnd(),e)),r.respondWith(e)}else g.logger.debug("Precaching found no match for "+h.getFriendlyURL(r.request.url))}))},precacheAndRoute:(e,r)=>{C.precache(e),C.addRoute(r)},suppressWarnings:e=>{b=e},addPlugins:e=>{w=w.concat(e)}};return Object.assign(C,f)}(workbox.core._private,workbox.core._private,workbox.core._private,workbox.core._private,workbox.core._private,workbox.core._private,workbox.core._private,workbox.core._private);