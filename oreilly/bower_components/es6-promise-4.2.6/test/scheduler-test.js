var g="undefined"!=typeof window?window:"undefined"!=typeof global?global:this,Promise=g.adapter.Promise,assert=require("assert");describe("scheduler",function(){afterEach(function(){Promise._setScheduler(void 0)}),describe("Promise._setScheduler",function(){it("should allow overriding the default scheduling mechanism",function(e){setTimeout(function(){var s=[],i=null;for(Promise._setScheduler(function(e){s.push(e)}),Promise.resolve("value").then(function(e){i=e}),assert.equal(i,null),assert.equal(s.length,1);s.length;)s.shift()();assert.equal(i,"value"),Promise._setScheduler(void 0),e()})})}),describe("Promise._asap",function(){it("should allow enqueuing microtasks",function(s){Promise._asap(function(e){assert.equal(e,"arg"),s()},"arg")})}),describe("Promise._setAsap",function(){it("should allow overriding asap",function(s){var i=!1;Promise._setAsap(function(e,s){i=!0,Promise._asap(e,s),Promise._setAsap(Promise._asap)}),Promise.resolve("value").then(function(e){resolvedWith=e,assert.equal(e,"value"),assert.equal(i,!0),s()})})})});