"use strict";const Rollup=require("broccoli-rollup"),Babel=require("broccoli-babel-transpiler"),merge=require("broccoli-merge-trees"),uglify=require("broccoli-uglify-js"),version=require("git-repo-version"),watchify=require("broccoli-watchify"),concat=require("broccoli-concat"),fs=require("fs"),stew=require("broccoli-stew"),find=stew.find,mv=stew.mv,rename=stew.rename,env=stew.env,map=stew.map,lib=find("lib"),testDir=find("test"),testFiles=find("test/{index.html,worker.js}"),json3=mv(find("node_modules/json3/lib/{json3.js}"),"node_modules/json3/lib/","test/"),mocha=mv(find("node_modules/mocha/mocha.{js,css}"),"node_modules/mocha/","test/"),testVendor=merge([json3,mocha]),es5=new Babel(lib,{plugins:["transform-es2015-arrow-functions","transform-es2015-computed-properties","transform-es2015-shorthand-properties","transform-es2015-template-literals","transform-es2015-parameters","transform-es2015-destructuring","transform-es2015-spread","transform-es2015-block-scoping","transform-es2015-constants",["transform-es2015-classes",{loose:!0}],"babel6-plugin-strip-class-callcheck"]});function rollupConfig(e){return new Rollup(es5,{rollup:{input:"lib/"+e,output:[{format:"umd",name:"ES6Promise",file:e,sourcemap:"inline"}]}})}const es6Promise=rollupConfig("es6-promise.js"),es6PromiseAuto=rollupConfig("es6-promise.auto.js"),testBundle=watchify(merge([mv(es6Promise,"test"),testDir]),{browserify:{debug:!0,entries:["./test/index.js"]}}),header=stew.map(find("config/versionTemplate.txt"),e=>e.replace(/VERSION_PLACEHOLDER_STRING/,version()));function concatAs(e){return merge([concat(merge([es6Promise,header]),{headerFiles:["config/versionTemplate.txt"],inputFiles:["es6-promise.js"],outputFile:e}),concat(merge([es6PromiseAuto,header]),{headerFiles:["config/versionTemplate.txt"],inputFiles:["es6-promise.auto.js"],outputFile:e.replace("es6-promise","es6-promise.auto")})])}function production(){let e;return env("production",()=>{e=uglify(concatAs("es6-promise.min.js"),{compress:!0,mangle:!0})}),e}function development(){return concatAs("es6-promise.js")}module.exports=merge([merge([production(),development()].filter(Boolean)),testFiles,testVendor,mv(testBundle,"test")]);